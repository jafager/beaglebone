.syntax unified


cm_per_base             = 0x44e00000

cm_per_mmc0_clkctrl     = 0x3c

mmchs0_base             = 0x48060000

sd_sysconfig            = 0x110
sd_sysconfig_sysreset   = (1 << 1)

sd_sysstatus            = 0x114
sd_sysstatus_resetdone  = (1 << 0)

sd_capa                 = 0x240
sd_capa_vs18            = (1 << 26)
sd_capa_vs30            = (1 << 25)



.text


.global mmc_init
mmc_init:

    base    .req r0
    tmp     .req r1

    push {lr}

    /* Enable the clock for the MMC module */

    ldr base, =cm_per_base
    mov tmp, 2
    str tmp, [base, cm_per_mmc0_clkctrl]

    /* Initiate soft reset */

    ldr base, =mmchs0_base
    mov tmp, sd_sysconfig_sysreset
    str tmp, [base, sd_sysconfig]

    /* Wait for soft reset to complete */

mmc_init_wait_for_reset:

    ldr r0, [base, sd_sysstatus]
    bl console_pretty_hexprint

    ldr base, =mmchs0_base
    ldr tmp, [base, sd_sysstatus]
    tst tmp, sd_sysstatus_resetdone
    beq mmc_init_wait_for_reset

    /* Set controller capabilities (1.8V and 3.0V voltage support) */

    ldr base, =mmchs0_base
    mov tmp, (sd_capa_vs18 | sd_capa_vs30)
    str tmp, [base, sd_capa]

    /* Configure bus transfer modes and bus power */

    ldr tmp, [base, sd_con]
    bic tmp, tmp, (sd_con_od | sd_con_dw8 | sd_con_ceata)
    str tmp, [base, sd_con]

    ldr tmp, [base, sd_hctl]
    bic tmp, tmp, (sd_hctl_dtw)
    orr tmp, tmp, (sd_hctl_sdvs_30 | sd_hctl_sdbp)
    str tmp, [base, sd_hctl]

mmc_init_wait_for_bus_power:

    ldr tmp, [base, sd_hctl]
    tst tmp, sd_hctl_sdbp
    beq mmc_init_wait_for_bus_power

    /* Enable internal clock */

    ldr tmp, [base, sd_sysctl]
    orr tmp, tmp, sd_sysctl_ice
    str tmp, [base, sd_sysctl]

    ldr tmp, [base, sd_sysctl]
    orr tmp, tmp, (0x55b << 





    pop {pc}

